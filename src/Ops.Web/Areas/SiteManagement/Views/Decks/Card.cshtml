@model Ocuda.Ops.Controllers.Areas.SiteManagement.ViewModels.Decks.CardViewModel

@section styles {
    <link rel="stylesheet" href="~/css/md.min.css" asp-append-version="true" />
}

<div class="row mb-2">
    <div class="col-sm-6">
        <h1>
            Add Card
            <small class="text-muted">@Model.DeckName</small>
        </h1>
    </div>
    <div class="col-sm-6">
        @if (!string.IsNullOrEmpty(Model.BackLink))
        {
            <a href="@Model.BackLink"
               class="btn btn-outline-dark mt-2 mb-1 ms-2 float-end">Back</a>
        }
        @if (Model.CardDetail != null)
        {
            <button class="btn btn-outline-danger mt-2 mb-1 me-2 float-end"
                    data-bs-toggle="modal"
                    data-bs-target="#deleteModal">
                <span class="fa-solid fa-xmark"></span>
                Delete Card
            </button>
        }
    </div>
</div>

<form asp-action="@nameof(DecksController.DeleteCard)" method="post" role="form">
    <input name="cardId" value="@Model.CardDetail?.CardId" type="hidden" />
    <div modal
         id="deleteModal"
         name="Delete Card"
         type="Ocuda.Utility.TagHelpers.ModalTypes.Delete">
    </div>
</form>

<div modal id="deleteModal"
     name="Card"
     type="Ocuda.Utility.TagHelpers.ModalTypes.Delete">
</div>

<form id="addImageForm" method="post" enctype="multipart/form-data">
    <input type="hidden" asp-for="DeckId" />
    <input type="hidden" asp-for="CardDetail.CardId" />
    <input type="hidden" asp-for="CardDetail.LanguageId" />
    <div class="modal fade" data-bs-backdrop="static" data-keyboard="false" id="addModal">
        <div class="modal-dialog modal-xl">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Add/edit image</h5>
                </div>
                <div class="modal-body">
                    <div class="row d-none mb-4" id="addImageAlertRow">
                        <div class="col-md-8 offset-md-2">
                            <div class="alert alert-warning" id="addImageAlert"></div>
                        </div>
                    </div>
                    <div class="row mb-2">
                        <div class="col-md-8 offset-md-2">
                            <div class="alert alert-info">
                                Card images must be @DecksController.CardImageWidth pixels wide
                                @if (DecksController.MaximumFileSizeBytes > 0)
                                {
                                    @:and smaller than @(DecksController.MaximumFileSizeBytes / 1024) KB
                                }
                            </div>
                        </div>
                    </div>
                    @if (!string.IsNullOrEmpty(Model.CardDetail?.Filename))
                    {
                        <div class="row mb-4">
                            <div class="col-form-label text-md-end col-md-3">Current image</div>
                            <div class="col-md-9">
                                <img style="max-width: 333px;"
                                     src="@Url.Action(nameof(DecksController.Image), DecksController.Name, new {
language = Model.SelectedLanguage.Name,
filename = Model.CardDetail.Filename
})" />
                            </div>
                        </div>
                    }
                    <div class="row mb-3">
                        <label class="col-form-label text-md-end col-md-3">
                            Image
                            <span class="fa-solid fa-asterisk fa-xs d-inline-block ms-2 text-danger oc-required-field-marker"></span><br />
                            (.jpg or .png)
                        </label>
                        <div class="col-md-9">
                            <div class="input-group">
                                <input type="file"
                                       class="form-control"
                                       asp-for="CardImage"
                                       accept=".jpg,.png" />
                                <!-- id = file_name -->
                            </div>
                        </div>
                    </div>
                    <div class="row mb-3">
                        <label class="col-form-label text-md-end col-md-3" asp-for="AltText">
                            Image alternative text
                            <span class="fa-solid fa-asterisk fa-xs d-inline-block ms-2 text-danger oc-required-field-marker"></span>
                        </label>
                        <div class="col-md-9">
                            <input asp-for="AltText" class="form-control" />
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-outline-dark" data-bs-dismiss="modal">Close</button>
                    <button class="btn btn-outline-success"
                            id="addImageFormButton"
                            disabled="disabled"
                            button-spinner>
                        <span class="fa-solid fa-upload"></span>
                        Upload
                    </button>
                </div>
            </div>
        </div>
    </div>
</form>

<div class="row py-2">
    <div class="col-12">
        <span class="d-none"><input asp-for="DeckName" formgroup readonly /></span>
        @if (Model.LanguageList?.Count() > 1)
        {
            <div class="mb-3 row">
                <div class="col-md-3 text-md-end">
                    <label asp-for="SelectedLanguage" class="col-form-label"></label>
                </div>
                <div class="col-md-9">
                    @foreach (var item in Model.LanguageList.Where(_ => !_.Disabled))
                    {
                        <a href="@Url.Action(nameof(DecksController.UpdateCard), new { cardId = Model.CardDetail.CardId, language = item.Value })"
                           class="btn btn-sm btn-outline-info mt-1 @(item.Selected ? "active" : null)">@item.Text</a>
                    }
                </div>
            </div>
            <div class="row d-none oc-save-warning">
                <div class="offset-md-3 col-md-9">
                    <div class="alert alert-warning">
                        <span class="fa-solid fa-circle-arrow-up"></span> Unsaved changes will be lost if you change languages.
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<form asp-action="@nameof(DecksController.UpdateCard)"
      method="post"
      role="form">
    <input asp-for="DeckId" type="hidden" />
    <input asp-for="LanguageId" type="hidden" />
    <input asp-for="CardDetail.Filename" type="hidden" />

    <input asp-for="CardDetail.Header" formgroup />
    <div class="mb-3 row">
        <div class="col-md-3 text-md-end">
            <label asp-for="CardDetail.Text" class="col-form-label"></label>
        </div>
        <div class="mb-3-inner col-md-9">
            <textarea asp-for="CardDetail.Text" markdown-editor></textarea>
            <span asp-validation-for="CardDetail.Text"
                  class="validation-message text-danger"></span>
        </div>
    </div>
    <input asp-for="CardDetail.Link" formgroup />
    <div class="mb-3 row">
        <div class="col-md-3 text-md-end">
            <label asp-for="CardDetail.Footer" class="col-form-label"></label>
        </div>
        <div class="mb-3-inner col-md-9">
            <textarea asp-for="CardDetail.Footer" markdown-editor></textarea>
            <span asp-validation-for="CardDetail.Footer"
                  class="validation-message text-danger"></span>
        </div>
    </div>

    @if (Model.CardDetail == null)
    {
        <div class="row">
            <div class="col-md-6 offset-md-3">
                <div class="alert alert-dark">
                    You can add an image once you save the card.
                </div>
            </div>
        </div>
    }
    else
    {
        <div class="row mb-3 mt-2">
            <div class="col-md-6 offset-md-3">
                <button type="button" class="btn btn-outline-success"
                        data-bs-toggle="modal"
                        data-bs-target="#addModal">
                    <span class="fa-solid fa-circle-plus" aria-hidden="true"></span>
                    @if (string.IsNullOrEmpty(Model.CardDetail?.Filename))
                    {
                        @:Add image...
                    }
                    else
                    {
                        @:Edit image...
                    }
                </button>
            </div>
        </div>
        @if (!string.IsNullOrEmpty(Model.CardDetail?.Filename))
        {
            <div class="mb-3 row">
                <div class="col-md-3 text-md-end">
                    <label asp-for="CardDetail.Filename" class="col-form-label"></label>
                </div>
                <div class="mb-3-inner col-md-9">
                    <input value="@Model.CardDetail.Filename" class="form-control" disabled />
                </div>
            </div>
            <input asp-for="CardDetail.AltText" formgroup />
        }
    }

    <div class="row mt-4">
        <div class="offset-md-3 col-md-9">
            <div class="d-flex">
                <button type="submit"
                        class="btn btn-outline-success btn-lg"
                        buttonspinner>
                    <span class="fa-regular fa-floppy-disk"></span>
                    Save
                </button>
                <div class="d-none oc-save-warning ms-3 flex-fill">
                    <div class="alert alert-warning mb-0">
                        <span class="fa-solid fa-triangle-exclamation"></span>
                        You have unsaved changes.
                    </div>
                </div>
            </div>
        </div>
    </div>

</form>

@section scripts {
    <script src="~/js/md.min.js" asp-append-version="true"></script>

    <script>
        $(function () {
            let textEditor = new Markdown.Editor($("#CardDetail_Text"), {
                allowUploads: false,
                allowImages: false,
                allowCode: false,
                allowHR: false
            });
            if (textEditor) {
                textEditor.run();
            }
        });
        $(function () {
            let detailEditor = new Markdown.Editor($("#CardDetail_Footer"), {
                allowUploads: false,
                allowImages: false,
                allowCode: false,
                allowHR: false
            });
            if (detailEditor) {
                detailEditor.run();
            }
        });

        $("#CardDetail_Header").keydown(function (event) {
            $(".oc-save-warning").removeClass("d-none");
        });
        $("#CardDetail_Text").keydown(function (event) {
            $(".oc-save-warning").removeClass("d-none");
        });
        $("#CardDetail_Link").keydown(function (event) {
            $(".oc-save-warning").removeClass("d-none");
        });
        $("#CardDetail_AltText").keydown(function (event) {
            $(".oc-save-warning").removeClass("d-none");
        });

        $('#deleteModal').on('show.bs.modal', function (event) {
            if (@Model.IsOnlyCard.ToString().ToLowerInvariant() === true) {
                $('#deleteModal').find('.modal-text')
                    .html('Are you sure you want to delete the last card in this deck (including any translations) as well as the deck itself?')
            } else {
                $('#deleteModal').find('.modal-text')
                    .html('Are you sure you want to delete this card including any translations?');
            }
        })

        function UpdateImageAddNotes(notes) {
            if (notes.length > 0) {
                let message = "Please correct the following issues:<ul>";
                notes.forEach(_ => message += _);
                message += "</ul>";
                $('#addImageAlert').html(message);
                $('#addImageAlertRow').removeClass('d-none');
                ResetSpinners();
            }
        }

        $('#addModal').on('hidden.bs.modal', function (e) {
            $('#CardImage').val('');
            $('#addImageAlertRow').addClass('d-none');
            $('#AltText').val('');
        });

        $('#CardImage').on('change', function (e) {
            $('#addImageFormButton').removeAttr("disabled");
        });

        $('#addImageForm').submit(function (e) {
            e.preventDefault();
            let goodToGo = true;

            var notes = [];
            if (!$('#CardImage').val()) {
                goodToGo = false;
                notes.push("<li>You must select an image file.</li>")
            }
            if (!$('#AltText').val()) {
                goodToGo = false;
                notes.push("<li>You must supply alt text for the image.</li>")
            }
            if (goodToGo === true) {
                $.ajax({
                    url: '@(Url.Action(nameof(DecksController.AddUpdateImage), DecksController.Name))',
                    data: new FormData(e.target),
                    cache: false,
                    contentType: false,
                    processData: false,
                    type: 'POST'
                }).done(function (response) {
                    if (response.success === true) {
                        location.href = response.url;
                    } else {
                        notes.push(response.message);
                        UpdateImageAddNotes(notes);
                    }
                });
            }
            UpdateImageAddNotes(notes);
        });
    </script>
}
