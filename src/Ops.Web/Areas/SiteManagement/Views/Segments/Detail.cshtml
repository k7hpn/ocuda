@model Ocuda.Ops.Controllers.Areas.SiteManagement.ViewModels.Segment.DetailViewModel

@section styles {
        <link rel="stylesheet" href="~/css/md.min.css" asp-append-version="true" />
}

<div class="d-flex justify-content-between">
    <h1>
        Segment
        <small class="text-muted">@Model.SegmentName</small>
    </h1>
    <div class="pt-2">
        @if (!Model.NewSegmentText && string.IsNullOrEmpty(Model.BackLink))
        {
                <button type="button"
                        class="btn btn-outline-danger"
                        data-bs-toggle="modal"
                        data-bs-target="#deleteModal"
                        data-segmentId="@Model.SegmentId"
                        data-languageId="@Model.LanguageId"
                        data-languageDescription="@Model.LanguageDescription">
                    <span class="fa-solid fa-circle-minus"></span>
                    Delete Segment
                </button>
        }
        @if (!string.IsNullOrEmpty(Model.BackLink))
        {
                <a href="@Model.BackLink"
                   class="btn btn-outline-dark ms-2">Back</a>
        }
        else
        {
                <a asp-action="Index"
                   class="btn btn-outline-dark ms-2">Cancel</a>
        }
    </div>
</div>
<form asp-controller="@SegmentsController.Name"
      asp-action="@(nameof(SegmentsController.DeleteText))"
      method="post"
      role="form">
    <input id="deleteSegmentId" asp-for="SegmentId" type="hidden" />
    <input id="deleteLanguageId" asp-for="LanguageId" type="hidden" />
    <div modal
         id="deleteModal"
         name="Segment"
         type="Ocuda.Utility.TagHelpers.ModalTypes.Delete"></div>
</form>
@if (!string.IsNullOrEmpty(Model.Relationship))
{
        <div class="row" style="padding-top: 1rem;">
            <div class="col-12 col-md-3 text-end">
                Relationship(s)
            </div>
            <div class="col-12 col-md-9">
            @Model.Relationship
            </div>
        </div>
}
<div class="row py-2">
    <div class="col-12">
        <span class="d-none"><input asp-for="SegmentName" formgroup readonly /></span>
        @if (Model.SegmentStartDate.HasValue || Model.SegmentEndDate.HasValue)
        {
                <input asp-for="SegmentStartDate"
                       formgroup
                       value="@Model.SegmentStartDate?.ToString()"
                       readonly />
                <input asp-for="SegmentEndDate"
                       formgroup
                       value="@Model.SegmentStartDate?.ToString()"
                       readonly />
        }
        @if (Model.LanguageList?.Count() > 1)
        {
                <div class="mb-3 row">
                    <div class="col-md-3 text-md-end">
                        <label asp-for="SelectedLanguage" class="col-form-label"></label>
                    </div>
                    <div class="col-md-9">
                    @foreach (var item in Model.LanguageList.Where(_ => !_.Disabled))
                    {
                                <a href="@Url.Action(nameof(SegmentsController.Detail), new { id = Model.SegmentId, language = item.Value })"
                                   class="btn btn-sm btn-outline-info mt-1 @(item.Selected ? "active" : null)">@item.Text</a>
                    }
                    </div>
                </div>
                <div class="row d-none oc-save-warning">
                    <div class="offset-md-3 col-md-9">
                        <div class="alert alert-warning">
                            <span class="fa-solid fa-circle-arrow-up"></span> Unsaved changes will be lost if you change languages.
                        </div>
                    </div>
                </div>
        }
    </div>
</div>
<form asp-action="@nameof(SegmentsController.Detail)" method="post" role="form">
    <input asp-for="SegmentId" type="hidden" />
    <input asp-for="LanguageId" type="hidden" />

    <select asp-for="SegmentWrapId"
            asp-items="Model.SegmentWrapList" formgroup></select>

    @if (!string.IsNullOrEmpty(Model.AutomatedHeaderMarkup))
    {
            <div class="mb-3 row">
                <div class="col-md-3 text-md-end">
                    <label asp-for="AutomatedHeaderMarkup" class="col-form-label"></label>
                </div>
                <div class="col-md-9" style="padding-top: 0.4rem;">
                @Html.Raw(Model.AutomatedHeaderMarkup)
                </div>
            </div>
    }
    else
    {
            <input asp-for="SegmentText.Header" formgroup />
    }
    <div class="mb-3 row">
        <div class="mb-3-inner col-12 border-top border-bottom p-3">
            <textarea asp-for="SegmentText.Text" markdown-editor></textarea>
            <span asp-validation-for="SegmentText.Text"
                  class="validation-message text-danger"></span>
        </div>
    </div>
    <div class="row">
        <div class="col">
            <div class="text-end mb-2">
                <button type="submit"
                        class="btn btn-lg btn-outline-success"
                        buttonspinner>
                    Save
                </button>
            </div>
        </div>
        </div>
        <div class="row">
            <div class="col d-flex">
                <div class="d-none oc-save-warning flex-fill text-start">
                    <div class="alert alert-warning mb-0">
                        <span class="fa-solid fa-triangle-exclamation"></span>
                        You have unsaved changes.
                    </div>
                </div>
            </div>
        </div>
    </div>
</form>

@section scripts {
        <script src="~/js/md.min.js" asp-append-version="true"></script>

        <script>
            $(function () {
                var editor = new Markdown.Editor($("#SegmentText_Text"), {
                    allowUploads: false,
                    allowImages: false,
                    allowCode: @Json.Serialize(!Model.IsShowNotes),
                    allowHR: @Json.Serialize(!Model.IsShowNotes)
                                    });
                if (editor) {
                    editor.run();
                }
            });

            $("#SegmentText_Text").keydown(function (event) {
                $(".oc-save-warning").removeClass("d-none");
            });

            $("#SegmentText_Header").keydown(function (event) {
                $(".oc-save-warning").removeClass("d-none");
            });

            $("#deleteModal").on("show.bs.modal", function (e) {
                var languageDescription = $(e.relatedTarget).data("languagedescription");
                $(this).find(".modal-text").text("Are you sure you want to delete the " + languageDescription + " text for this segment?");
            });
        </script>
}
